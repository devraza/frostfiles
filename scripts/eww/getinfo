#!/bin/bash

# Volume command
VOLUME="$(pamixer --get-volume-human)"

## Music information
STATUS="$(mpc status)"
MUSIC_DIR="$HOME/Music"

get_cpu() {
  echo "$[100-$(vmstat 1 2|tail -1|awk '{print $15}')]"
}

get_mem() {
  printf "%.0f\n" $(free -m | grep Mem | awk '{print ($3/$2)*100}')
}

get_bat() {
  upower -i /org/freedesktop/UPower/devices/battery_BAT1 | grep percentage | awk '{print ($2)}' | sed 's/%//'
}

get_vol() {
  if [[ $VOLUME == "muted" ]]; then
	  echo "mut"
  else
	  echo $VOLUME
  fi
}

## Get status
get_status() {
	if [[ $STATUS == *"[playing]"* ]]; then
		echo ""
	else
		echo "奈"
	fi
}

## Get song
get_song() {
	song=`mpc -f %title% current`
	if [[ -z "$song" ]]; then
		echo "N/A"
	else
		echo "$song"
	fi	
}

## Get queued song
queued_song() {
	song=`mpc queued`
	if [[ -z "$song" ]]; then
		echo "N/A"
	else
		echo "$song"
	fi	
}

## Get artist
get_artist() {
	artist=`mpc -f %artist% current`
	if [[ -z "$artist" ]]; then
		echo "N/A"
	else
		echo "$artist"
	fi	
}

## Get time
get_time() {
	time=`mpc status | grep "%)" | awk '{print $4}' | tr -d '(%)'`
	if [[ -z "$time" ]]; then
		echo "0"
	else
		echo "$time"
	fi	
}
get_ctime() {
	ctime=`mpc status | grep "#" | awk '{print $3}' | sed 's|/.*||g'`
	if [[ -z "$ctime" ]]; then
		echo "0:00"
	else
		echo "$ctime"
	fi	
}
get_ttime() {
	ttime=`mpc -f %time% current`
	if [[ -z "$ttime" ]]; then
		echo "0:00"
	else
		echo "$ttime"
	fi	
}

loop_st() {
    LOOP="$(mpc status | grep "repeat:" | awk '{ print $3 }')"
    if [[ $LOOP == *"on"* ]]; then
        icon="凌"
    else
        icon="稜"
    fi
    echo $icon
}

# Music commands
if [[ "$1" == "--song" ]]; then
    get_song
elif [[ "$1" == "--queued" ]]; then
    queued_song
elif [[ "$1" == "--artist" ]]; then
    get_artist
elif [[ "$1" == "--status" ]]; then
    get_status
elif [[ "$1" == "--time" ]]; then
    get_time
elif [[ "$1" == "--ctime" ]]; then
    get_ctime
elif [[ "$1" == "--ttime" ]]; then
    get_ttime
elif [[ "$1" == "--toggle" ]]; then
    mpc -q toggle
elif [[ "$1" == "--next" ]]; then
    { mpc -q next; }
elif [[ "$1" == "--prev" ]]; then
    { mpc -q prev; }
elif [[ "$1" == "--loop" ]]; then
    mpc -q repeat
elif [[ "$1" == "--loop_ic" ]]; then
    loop_st
# System info
elif [[ "$1" == "--cpu" ]]; then
    get_cpu
elif [[ "$1" == "--memory" ]]; then
    get_mem
elif [[ "$1" == "--battery" ]]; then
    get_bat
elif [[ "$1" == "--volume" ]]; then
    get_vol
fi
