;; Workspace polls
(deflisten current_workspace :initial "1" `get-active-workspace`)

;; System Polls
(defpoll network :interval "10s" "nmcli 2>&1 | head -n 1")
(defpoll volume :interval "400ms" "pamixer --get-volume-human | sed 's/%//g'")

;; Time polls
(defpoll time_min :interval "5s" "date +\"%M\"")
(defpoll time_hour :interval "5s" "date +\"%I\"")

(defwidget bar []
	  (box :class "eww_bar" 
		     :orientation "h" 
		     :vexpand "false" 
		     :hexpand "false"
		     (top)
		     (center)
         (bottom)))

(defwidget center []
	  (box :class "center"
		:orientation "h"
		:halign "center"
		(box :class "time_container"
         	     :orientation "h"
		     (label :class "time_hour_alt"
                            :halign "start"
		            :text time_hour)
          (label :class "time_separator" :text "|" :halign "center")
          (label :class "time_min_alt"
		 :text time_min
		 :halign "end"))))

(defwidget bottom []
	  (box :class "bottom"
		     :orientation "h"
		     :halign "end"
         :space-evenly false
          (box :class "barstats"
              :orientation "h"
              :halign "start"
              (label :class {volume == "muted" ? "bar_volmuted"
                            : volume == "0" ? "bar_volzero"
                            : volume <= "30" ? "bar_vollow"
                            : "bar_volhigh"}
                     :text {volume == "muted" ? ""
                            : volume == "0" ? ""
                            : volume <= "30" ? ""
                            : ""}
                     :tooltip "${volume == "muted" ? "Muted" : "${volume}%"}")
	      (label :class "bar_wifi" :text " " :tooltip "${network}"))
        (box :class "os"
             :space-evenly false
	           (label :class "system" :text "Nix")
	           (label :class "ending" :text "OS"))))

(defwidget top []
    (box :class "workspaces"
		:orientation "h"
		:halign "start"
		:hexpand false
    :space-evenly false
	  (label :class "hostname" :text "frigidslash")
	  (label :class "workspace" :text "${current_workspace}")))

(defwindow bar
	   :geometry (geometry :x "0"
                      	 :y "0" 
		                     :height "20px" 
		                     :width "1280px"
                         :anchor "bottom center")
	   :monitor 0
	   :stacking "fg"
	   (bar))
